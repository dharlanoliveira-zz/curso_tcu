ECMAScript 5

Especificação suportada por todos os browsers comerciais
Linguagem funcional e dinâmica
Não existe o conceito de orientação a objeto
Altamente produtiva, mas sem os devidos cuidados pode gerar um código de difícil manutenção
Devido a necessidade de se organizar minimamente o código, foram criadas maneiras criativas de fazer O.O.
Mesmo assim, dependia muito do senso de organização do desenvolvedor

ECMAScript 6

Nova especificação que torna o Javascript uma linguagem completa
Novidades
  Classes
    Construtores
    Visibilidade
    Getters e Setters
    Herança
    Módulos
  Arrow functions
  Destructuring
  Escopo de bloco
  Rest parameters
Grande problema é que a maioria dos browsers não suportam o ECMAScript 6 completamente
É possível ser usado com um compilador para ECMAScript5

Typescript

Foi criado pela Microsoft
É uma extensão do ECMAScript6, ou seja o código é muito parecido
Foi escolhido pela equipe do Angular para ser a linguagem "principal" do framework
A escolha passa, entre outras coisas, pela proximidade com a linguagem Javascript
Pode ser compilado para ECMAScript 5 ou ECMAScript 6
Google influeciou na decisão de incluir anotações (decorators) na versão 1.5 do typescript, recurso necessário para as necessidades do novo Angular

Typescript vs ECMAScript 6

Tipagem forte
Compilação estática
Decorators (Anotações)
Interfaces
Enums
Modificadores de visibilidade
Generics

NodeJS

Interpretador de código Javascript
Muito usado do lado servidor
Tem alta performance devido a um modelo orientado a eventos de I/O
Usado por Netflix, Paypal, Linkedin, Uber
